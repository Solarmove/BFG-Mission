"""empty message

Revision ID: fa690eff369a
Revises:
Create Date: 2025-07-31 12:29:44.320709

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "fa690eff369a"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "positions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(length=255), nullable=False),
        sa.Column("hierarchy_level", sa.INTEGER(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("title"),
    )
    op.create_table(
        "task_categories",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("username", sa.VARCHAR(length=32), nullable=True),
        sa.Column("full_name_tg", sa.VARCHAR(length=255), nullable=False),
        sa.Column("full_name", sa.VARCHAR(length=255), nullable=True),
        sa.Column("position_id", sa.INTEGER(), nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["position_id"], ["positions.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("full_name"),
    )
    op.create_table(
        "tasks",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("creator_id", sa.BIGINT(), nullable=False),
        sa.Column("executor_id", sa.BIGINT(), nullable=False),
        sa.Column("title", sa.VARCHAR(length=255), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("start_datetime", postgresql.TIMESTAMP(), nullable=False),
        sa.Column("end_datetime", postgresql.TIMESTAMP(), nullable=False),
        sa.Column("completed_datetime", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("category_id", sa.INTEGER(), nullable=True),
        sa.Column("photo_required", sa.BOOLEAN(), nullable=False),
        sa.Column("video_required", sa.BOOLEAN(), nullable=False),
        sa.Column("file_required", sa.BOOLEAN(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "NEW",
                "IN_PROGRESS",
                "COMPLETED",
                "CANCELED",
                "OVERDUE",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["category_id"], ["task_categories.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["creator_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["executor_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "work_schedules",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("start_time", postgresql.TIME(), nullable=False),
        sa.Column("end_time", postgresql.TIME(), nullable=False),
        sa.Column("date", sa.DATE(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id", "date", name="unique_user_id_date_work_schedule"
        ),
    )
    op.create_table(
        "task_control_points",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("task_id", sa.INTEGER(), nullable=False),
        sa.Column("deadline", postgresql.TIMESTAMP(), nullable=False),
        sa.Column("datetime_complete", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("description", sa.TEXT(), nullable=False),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_reports",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("task_id", sa.INTEGER(), nullable=False),
        sa.Column("task_control_point_id", sa.INTEGER(), nullable=True),
        sa.Column("report_text", sa.TEXT(), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["task_control_point_id"], ["task_control_points.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_report_contents",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("report_id", sa.INTEGER(), nullable=False),
        sa.Column("file_id", sa.VARCHAR(length=255), nullable=False),
        sa.Column("file_unique_id", sa.VARCHAR(length=255), nullable=False),
        sa.Column(
            "content_type",
            postgresql.ENUM(
                "UNKNOWN",
                "ANY",
                "TEXT",
                "ANIMATION",
                "AUDIO",
                "DOCUMENT",
                "PAID_MEDIA",
                "PHOTO",
                "STICKER",
                "STORY",
                "VIDEO",
                "VIDEO_NOTE",
                "VOICE",
                "CHECKLIST",
                "CONTACT",
                "DICE",
                "GAME",
                "POLL",
                "VENUE",
                "LOCATION",
                "NEW_CHAT_MEMBERS",
                "LEFT_CHAT_MEMBER",
                "NEW_CHAT_TITLE",
                "NEW_CHAT_PHOTO",
                "DELETE_CHAT_PHOTO",
                "GROUP_CHAT_CREATED",
                "SUPERGROUP_CHAT_CREATED",
                "CHANNEL_CHAT_CREATED",
                "MESSAGE_AUTO_DELETE_TIMER_CHANGED",
                "MIGRATE_TO_CHAT_ID",
                "MIGRATE_FROM_CHAT_ID",
                "PINNED_MESSAGE",
                "INVOICE",
                "SUCCESSFUL_PAYMENT",
                "REFUNDED_PAYMENT",
                "USERS_SHARED",
                "CHAT_SHARED",
                "GIFT",
                "UNIQUE_GIFT",
                "CONNECTED_WEBSITE",
                "WRITE_ACCESS_ALLOWED",
                "PASSPORT_DATA",
                "PROXIMITY_ALERT_TRIGGERED",
                "BOOST_ADDED",
                "CHAT_BACKGROUND_SET",
                "CHECKLIST_TASKS_DONE",
                "CHECKLIST_TASKS_ADDED",
                "DIRECT_MESSAGE_PRICE_CHANGED",
                "FORUM_TOPIC_CREATED",
                "FORUM_TOPIC_EDITED",
                "FORUM_TOPIC_CLOSED",
                "FORUM_TOPIC_REOPENED",
                "GENERAL_FORUM_TOPIC_HIDDEN",
                "GENERAL_FORUM_TOPIC_UNHIDDEN",
                "GIVEAWAY_CREATED",
                "GIVEAWAY",
                "GIVEAWAY_WINNERS",
                "GIVEAWAY_COMPLETED",
                "PAID_MESSAGE_PRICE_CHANGED",
                "VIDEO_CHAT_SCHEDULED",
                "VIDEO_CHAT_STARTED",
                "VIDEO_CHAT_ENDED",
                "VIDEO_CHAT_PARTICIPANTS_INVITED",
                "WEB_APP_DATA",
                "USER_SHARED",
                name="contenttype",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["report_id"], ["task_reports.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task_report_contents")
    op.drop_table("task_reports")
    op.drop_table("task_control_points")
    op.drop_table("work_schedules")
    op.drop_table("tasks")
    op.drop_table("users")
    op.drop_table("task_categories")
    op.drop_table("positions")
    # ### end Alembic commands ###
