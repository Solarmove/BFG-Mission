from langchain_core.prompts import (
    ChatPromptTemplate,
    MessagesPlaceholder,
)


LLM_AGENT_FORMATER_PROMPT = """
–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
1. –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç, —è–∫–∏–π –Ω–∞–¥—ñ—Å–ª–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á,–∑ Markdown —Ñ–æ—Ä–º–∞—Ç–∞ —É HTML-—Ñ–æ—Ä–º–∞—Ç.
2. –î–æ–¥–∞—Ç–∏ –µ–º–æ–¥–∑—ñ (—è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î) —Ç–∞–º –¥–µ —Ü–µ –¥–æ—Ä–µ—á–Ω–æ
3. –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å.

## –ü—Ä–∏–∫–ª–∞–¥ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
### ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π HTML):
- <b>–í–∞–∂–ª–∏–≤–∏–π —Ç–µ–∫—Å—Ç</b>
- <i>–í–∏–¥—ñ–ª–µ–Ω–∏–π —Ç–µ–∫—Å—Ç</i>
- <u>–ü—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–∏–π —Ç–µ–∫—Å—Ç</u>
- <code>print("–∫–æ–¥")</code>
- <b><i>–ö–æ–º–±—ñ–Ω–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç</i></b>
–ü–µ—Ä–µ–ª—ñ–∫ –¥–∞–Ω–Ω–∏—Ö –ó–ê–í–ñ–î–ò –æ–±–≥–æ—Ä—Ç–∞–π –≤ <blockquote></blockquote> –∞–ª–µ –Ω–µ –∑–ª–æ–≤–∂–∏–≤–∞–π:
–ü—Ä–∏–∫–ª–∞–¥:
"–û—Å—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π, —è–∫—ñ –∑–∞—Ä–∞–∑ —î –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö:

<blockquote>üå± –î–æ–≥–ª—è–¥ –∑–∞ —Ä–æ—Å–ª–∏–Ω–∞–º–∏
üìù test1
üìù test2
üìù test3
üßπ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è
üçΩÔ∏è –∫–µ–π—Ç–µ—Ä–∏–Ω–≥</blockquote>

–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏, –∑–º—ñ–Ω–∏—Ç–∏ –∞–±–æ –≤–∏–¥–∞–ª–∏—Ç–∏ —è–∫—É—Å—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é ‚Äî –¥–∞–π –∑–Ω–∞—Ç–∏!
"

### ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û (–ù–ï –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π Markdown):
- **—Ç–µ–∫—Å—Ç** –∞–±–æ __—Ç–µ–∫—Å—Ç__
- *—Ç–µ–∫—Å—Ç* –∞–±–æ _—Ç–µ–∫—Å—Ç_
- `–∫–æ–¥`
- ***—Ç–µ–∫—Å—Ç***
–ù–ï –í–ò–ö–û–†–ò–°–¢–û–í–£–ô  <br>, <hr>, <p>, <div>, <span>, <strong>, <em>, <code>, <pre>, <ul>, <ol>, <li>.
"""


def generate_prompt(user_prompt: str):
    prompt = user_prompt
    global_prompt = ChatPromptTemplate.from_messages(
        [
            ("system", prompt),
            MessagesPlaceholder(variable_name="chat_history"),
            ("human", "{input}"),
            MessagesPlaceholder(variable_name="agent_scratchpad"),
        ]
    )
    return global_prompt


def generate_prompt_without_history(user_prompt: str):
    prompt = user_prompt
    global_prompt = ChatPromptTemplate.from_messages(
        [
            ("system", prompt),
            ("human", "{input}"),
            MessagesPlaceholder(variable_name="agent_scratchpad"),
        ]
    )
    return global_prompt