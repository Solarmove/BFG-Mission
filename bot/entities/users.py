import datetime

from pydantic import BaseModel


class UserRead(BaseModel):
    """Модель для читання даних користувача з бази даних."""

    id: int
    """Унікальний ідентифікатор користувача в базі даних. Часто називаэться `user_id`, 'telegram_id', 'chat_id',."""
    username: str | None = None
    """Ім'я користувача в Telegram. Може бути `None`, якщо користувач не має імені."""
    full_name_tg: str
    """Повне ім'я користувача в Telegram. Використовується для ідентифікації користувача."""
    full_name: str | None = None
    """Повне ім'я користувача. Може бути `None`, якщо користувач не має повного імені."""
    hierarchy_level: int
    """Рівень ієрархії користувача. Використовується для визначення ролі користувача в системі."""
    position_title: str | None = None
    """Назва посади користувача. Може бути `None`, якщо користувач не має посади."""
    created_at: datetime.datetime
    """Дата та час створення користувача. Використовується для відстеження часу реєстрації."""
    updated_at: datetime.datetime
    """Дата та час останнього оновлення користувача. Використовується для відстеження змін у профілі користувача."""


class WorkScheduleRead(BaseModel):
    """Модель для читання даних робочого графіку користувача з бази даних."""

    id: int
    """Унікальний ідентифікатор робочого графіку."""
    user_id: int
    """ID користувача, до якого належить робочий графік."""
    start_time: datetime.time
    """Час початку робочого дня."""
    end_time: datetime.time
    """Час закінчення робочого дня."""
    date: datetime.date


class WorkScheduleUpdate(BaseModel):
    """Модель для оновлення робочого графіку користувача."""

    start_time: datetime.time | None = None
    """Час початку робочого дня. Може бути `None`, якщо не потрібно змінювати."""
    end_time: datetime.time | None = None
    """Час закінчення робочого дня. Може бути `None`, якщо не потрібно змінювати."""
    date: datetime.date | None = None
    """Дата робочого графіку. Може бути `None`, якщо не потрібно змінювати."""


class WorkScheduleCreate(BaseModel):
    """Модель для створення нового робочого графіку користувача."""

    user_id: int
    """ID користувача, для якого створюється робочий графік."""
    start_time: datetime.time
    """Час початку робочого дня."""
    end_time: datetime.time
    """Час закінчення робочого дня."""
    date: datetime.date
    """Дата робочого графіку."""